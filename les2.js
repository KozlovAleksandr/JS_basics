'use strict';

// ----------- ЗАДАНИЕ 1 -----------

// создаются переменные a b c d , пременным a и b присваимаются значения 1
let a = 1,
  b = 1,
  c, d;

// 1.1. ПРЕфиксный декремент сначала увеличивает значение переменной на единицу (1+1=2) , 
// после чего присваивает значение пеменной слева от "="
// c = 2 , a = 2
c = ++a;
alert(c);

// 1.2. ПОСТфиксный декремент увеличивает значение пременной на единицу (1+1=2) 
// только после того как старое значение присвоено значение слева от "="
// d = 1 , b = 2
d = b++;
alert(d);

// 1.3. слачала переменной работает декремент переменной a (2+1=3) , 
// после этого происходит сложение с 2 (2+3=5) и послученное значение присваивается c
// c = 5 , a = 3
c = 2 + ++a;
alert(c);

// 1.4. сначала сложение 2 и старого значние b (2) (2+2=4), послученное значение присваивается d , 
// после этого происходит декремент переменной b (2+1=3)
// d = 4 , b = 3
d = 2 + b++;
alert(d);
alert(a);
alert(b);


// ----------- ЗАДАНИЕ 2 -----------

// создаётся переменная e , ей присваивается значение 2
// создаётся переменная x , ей присваивается значение через выражение , в рамках которого:
// 1. в скобках повторное присваиваеие значение переменной e через оператор с умножением 
// равносильным написанию "e *=2" => "e = e * 2" => "e = 2 * 2" => "e = 4"
// 2. происходит сложение 1 + 4 = 5
// 3. послученное значение присваимается переменной x
// e = 4 , x = 5 
let e = 2;
let x = 1 + (e *= 2);
alert(`e = ${e} , x = ${x}`);


// ----------- ЗАДАНИЕ 3 -----------

/**
 * Функция заправшивает целое число у Пользователя. Если Пользователь не вводит данные , 
 * нажимает отмену или вводит не целое число , происходит повторное запрашивание
 * @returns {number} возвращает целое число
 */
function askInt() {
  let q;
  do {
    q = prompt("Введите целое число");
  } while (q == "" || q == null || !Number.isInteger(+q)); {
    return +q;
  }
}

function getResult() {
  let y = askInt();
  let x = askInt();
  let result;
  switch (true) {
    case (y >= 0 && x >= 0):
      result = y - x;
      alert(`Ваши числа ${y} и ${x} - положительные \nВычитание даёт результат ${result}`);
      break;
    case (y < 0 && x < 0):
      result = y * x;
      alert(`Ваши числа ${y} и ${x} - отрицательные \nУмножение даёт результат ${result}`);
      break;
    case ((y >= 0 && x < 0) || (y < 0 && x >= 0)):
      result = y + x;
      alert(`Ваши числа ${y} и ${x} имеют разные знаки \nСложение даёт результат ${result}`);
      break;
  }
}

getResult();


// ----------- ЗАДАНИЕ 4 -----------

/**
 * Сложение двух чисел
 * @param {number} a - первое число
 * @param {number} b - второе число
 * @returns {number} сумма чисел a и b
 */
function addNum(a, b) {
  return a + b;
}
/**
 * Вычитание двух чисел
 * @param {number} a - первое число
 * @param {number} b - второе число
 * @returns {number} разность чисел a и b
 */
function subNum(a, b) {
  return a - b;
}
/**
 * Деление двух чисел
 * @param {number} a - первое число
 * @param {number} b - второе число
 * @returns {number} частное чисел a и b
 */
function divNum(a, b) {
  return a / b;
}
/**
 * Умножение двух чисел
 * @param {number} a - первое число
 * @param {number} b - второе число
 * @returns {number} произведение чисел a и b
 */
function multNum(a, b) {
  return a * b;
}


// ----------- ЗАДАНИЕ 5 -----------

/**
 * Функция производит арифметическую операцию с двумя числами
 * @param {number} arg1 целое число
 * @param {number} arg2 целое число
 * @param {string} operation арифметическая операция
 * @returns {number} результат арифметической операции
 */
function mathOperation(arg1, arg2, operation) {
  switch (true) {
    case operation == "сложение":
      return addNum(arg1, arg2);
    case operation == "вычитание":
      return subNum(arg1, arg2);
    case operation == "деление":
      return divNum(arg1, arg2);
    case operation == "умножение":
      return multNum(arg1, arg2);
  }
}

/**
 * Функция запрашивает у Пользователя условия для выполнения операции и выводит результат на экран
 */
function askConditions() {
  let arg1 = askInt();
  let arg2 = askInt();
  let operation = prompt("Какую операцию произвести с числами? \nСложение \nВычитание \nДеление \nУмножение").toLowerCase();
  let result = mathOperation(arg1, arg2, operation);
  alert(`Результатом выполнения операции "${operation}" является ${result}`);
}

askConditions();


// ----------- ЗАДАНИЕ 6 -----------

let sum = prompt("Какую сумму денег вносите?");
let lastSym = sum.charAt(sum.length - 1); // последний символ
let preLastSym = sum.charAt(sum.length - 2); // предпоследний символ на случай с 11 до 14

switch (true) {
  case (lastSym == "1" && preLastSym != "1"):
    sum += " рубль";
    break;
  case (lastSym >= "2" && lastSym <= "4" && preLastSym != "1"):
    sum += " рубля";
    break;
  default:
    sum += " рублей";
}
alert(`Выша сумму в ${sum} успешно зачислена`);